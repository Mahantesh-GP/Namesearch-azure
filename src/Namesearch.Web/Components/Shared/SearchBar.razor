@namespace Namesearch.Web.Components.Shared

<div class="search-bar-container">
    <div class="search-bar">
        <input 
            type="text" 
            class="search-input" 
            placeholder="@Placeholder" 
            value="@Value"
            @oninput="HandleInput"
            @onkeydown="HandleKeyDown" />
        <button class="search-button" @onclick="OnSearch" disabled="@IsSearching">
            @if (IsSearching)
            {
                <span class="spinner"></span>
            }
            else
            {
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="11" cy="11" r="8"></circle>
                    <path d="m21 21-4.35-4.35"></path>
                </svg>
            }
        </button>
    </div>
</div>

@code {
    [Parameter]
    public string Value { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public EventCallback OnSearchClicked { get; set; }

    [Parameter]
    public string Placeholder { get; set; } = "Search for names...";

    [Parameter]
    public bool IsSearching { get; set; }

    private async Task HandleInput(ChangeEventArgs e)
    {
        Value = e.Value?.ToString() ?? string.Empty;
        await ValueChanged.InvokeAsync(Value);
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !IsSearching)
        {
            await OnSearch();
        }
    }

    private async Task OnSearch()
    {
        if (!string.IsNullOrWhiteSpace(Value))
        {
            await OnSearchClicked.InvokeAsync();
        }
    }
}
